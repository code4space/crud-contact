@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap");

:root {
  --err-color: #00ffc0;
  --err-duration: 2s;
  --err-delay: 0s;
}

.error {
  display: flex;
  width: 100vw;
  height: 100dvh;
  position: fixed;
  background-color: white;
  left: 0;
  top: 0;
  z-index: 100;
}

.drop {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 100%;
  justify-content: space-evenly;
  overflow: hidden;
}

.drop span {
  width: 1px;
  background-color: rgb(223, 223, 223);
  position: relative;
}

.drop span:before {
  content: "";
  position: absolute;
  width: 2px;
  left: -0.5px;
  border-radius: 3px;
  background-color: var(--err-color);
  animation: drop var(--err-duration) linear var(--err-delay) infinite;
}

@keyframes drop {
  0% {
    top: -210px;
    height: 200px;
  }

  100% {
    height: 50px;
    top: 100%;
  }
}

.error-content {
  position: absolute;
  left: 0;
  top: 0;
  display: flex;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.error-content .stack {
  display: grid;
  grid-template-columns: 1fr;
}

.error-content .stack h1 {
  font-family: oswald, sans-serif;
  font-size: 7em;
  text-shadow: 2px 2px 0 var(--err-color);
  grid-row-start: 1;
  grid-column-start: 1;
  --stack-height: calc(100% / 3 - 1px);
  --inverse-index: calc(2 - var(--index));
  --clip-top: calc(var(--stack-height) * var(--index));
  --clip-bottom: calc(var(--stack-height) * var(--inverse-index));
  clip-path: inset(var(--clip-top) 0 var(--clip-bottom) 0);
  animation: stack 340ms cubic-bezier(0.46, 0.29, 0, 1.24) 1 backwards
      calc(var(--index) * 120ms),
    glitch 2s ease infinite 2s alternate-reverse;
}

.stack h1:nth-child(odd) {
  --glitch-translate: 8px;
}
.stack h1:nth-child(even) {
  --glitch-translate: -8px;
}

@keyframes stack {
  0% {
    opacity: 0;
    transform: translateX(-50%);
    text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
  }
  60% {
    opacity: 0.5;
    transform: translateX(50%);
  }
  80% {
    transform: none;
    opacity: 1;
    text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
  }
  100% {
    text-shadow: none;
  }
}

@keyframes glitch {
  0% {
    text-shadow: -2px 3px 0 red, 2px -3px 0 blue;
    transform: translate(var(--glitch-translate));
  }
  2% {
    text-shadow: 2px -3px 0 red, -2px 3px 0 blue;
  }
  4%,
  100% {
    text-shadow: 2px 2px 0 var(--err-color);
    transform: none;
  }
}

.error-content h2 {
  font-family: oswald, sans-serif;
  font-size: 1.7em;
  text-align: center;
}

.error-content h3 {
  color: rgb(68, 68, 68);
  font-weight: 300;
  margin-top: 30px;
}

.err-button {
  display: flex;
  gap: 20px;
  margin-top: 10px;
}

.err-button button, .err-button a {
  font-weight: 200;
  padding: 10px 20px;
  background-color: white;
  box-shadow: 2px 2px 0 var(--err-color);
  cursor: pointer;
  position: relative;
  border: 2px solid black;
  font-weight: 400;
  text-decoration: none;
  color: black;
}

.err-button button:hover, .err-button a:hover {
  animation: glitch-button 0.3s;
  animation-fill-mode: both;
}

@keyframes glitch-button {
  0% {
    box-shadow: 2px 2px 0 var(--err-color);
    width: 200px;
  }

  50% {
    box-shadow: 12px 12px 0 var(--err-color);
  }

  100% {
    box-shadow: 2px 2px 0 black;
    background-color: var(--err-color);
    color: aliceblue;
  }
}
